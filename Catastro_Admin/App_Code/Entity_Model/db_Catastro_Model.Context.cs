//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity_Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_CatastrosEntities : DbContext
    {
        public db_CatastrosEntities()
            : base("name=db_CatastrosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_Generales_Accesos> tb_Generales_Accesos { get; set; }
        public virtual DbSet<tb_Generales_Accesos_Usuarios> tb_Generales_Accesos_Usuarios { get; set; }
        public virtual DbSet<tb_Generales_Usuarios> tb_Generales_Usuarios { get; set; }
        public virtual DbSet<tb_Generales_Usuarios_Contraseñas> tb_Generales_Usuarios_Contraseñas { get; set; }
        public virtual DbSet<Catastro_Solicitudes_Domicilio_Notificacion> Catastro_Solicitudes_Domicilio_Notificacion { get; set; }
        public virtual DbSet<Catastro_Solicitudes_Notarias> Catastro_Solicitudes_Notarias { get; set; }
        public virtual DbSet<Catastro_Solicitudes_Predios> Catastro_Solicitudes_Predios { get; set; }
        public virtual DbSet<Catastro_Solicitudes_Propietarios> Catastro_Solicitudes_Propietarios { get; set; }
        public virtual DbSet<Catastro_Solicitudes_Uso_Terreno_Rural> Catastro_Solicitudes_Uso_Terreno_Rural { get; set; }
        public virtual DbSet<Catastro_Catalogo_Operaciones> Catastro_Catalogo_Operaciones { get; set; }
        public virtual DbSet<Catastro_Catalogo_Tipos_Terrenos> Catastro_Catalogo_Tipos_Terrenos { get; set; }
        public virtual DbSet<Catastro_Catalogo_Usos_Terrenos_Urbanos> Catastro_Catalogo_Usos_Terrenos_Urbanos { get; set; }
        public virtual DbSet<Catastro_Fichas> Catastro_Fichas { get; set; }
        public virtual DbSet<Catastro_Fichas_Generales> Catastro_Fichas_Generales { get; set; }
        public virtual DbSet<Catastro_Catalogo_Municipios> Catastro_Catalogo_Municipios { get; set; }
        public virtual DbSet<Catastro_Catalogo_Poblaciones> Catastro_Catalogo_Poblaciones { get; set; }
        public virtual DbSet<Catastro_Fichas_Construcciones> Catastro_Fichas_Construcciones { get; set; }
        public virtual DbSet<Catastro_Fichas_Demeritos> Catastro_Fichas_Demeritos { get; set; }
        public virtual DbSet<Catastro_Fichas_Domicilios_Notificaciones> Catastro_Fichas_Domicilios_Notificaciones { get; set; }
        public virtual DbSet<Catastro_Fichas_Propietarios> Catastro_Fichas_Propietarios { get; set; }
        public virtual DbSet<Catastro_Fichas_Terrenos> Catastro_Fichas_Terrenos { get; set; }
    
        public virtual ObjectResult<sp_Leer_Propietarios_Result> sp_Leer_Propietarios(Nullable<int> id_ficha)
        {
            var id_fichaParameter = id_ficha.HasValue ?
                new ObjectParameter("id_ficha", id_ficha) :
                new ObjectParameter("id_ficha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Leer_Propietarios_Result>("sp_Leer_Propietarios", id_fichaParameter);
        }
    
        public virtual ObjectResult<sp_Leer_Construcciones_Result> sp_Leer_Construcciones(Nullable<int> id_ficha)
        {
            var id_fichaParameter = id_ficha.HasValue ?
                new ObjectParameter("id_ficha", id_ficha) :
                new ObjectParameter("id_ficha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Leer_Construcciones_Result>("sp_Leer_Construcciones", id_fichaParameter);
        }
    
        public virtual ObjectResult<sp_Leer_Domicilio_Notificacion_Result> sp_Leer_Domicilio_Notificacion(Nullable<int> id_ficha)
        {
            var id_fichaParameter = id_ficha.HasValue ?
                new ObjectParameter("id_ficha", id_ficha) :
                new ObjectParameter("id_ficha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Leer_Domicilio_Notificacion_Result>("sp_Leer_Domicilio_Notificacion", id_fichaParameter);
        }
    
        public virtual ObjectResult<sp_Leer_Informacion_Terreno_Result> sp_Leer_Informacion_Terreno(Nullable<int> id_ficha)
        {
            var id_fichaParameter = id_ficha.HasValue ?
                new ObjectParameter("id_ficha", id_ficha) :
                new ObjectParameter("id_ficha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Leer_Informacion_Terreno_Result>("sp_Leer_Informacion_Terreno", id_fichaParameter);
        }
    
        public virtual ObjectResult<sp_Leer_Ubicacion_Generales_Result> sp_Leer_Ubicacion_Generales(Nullable<int> id_ficha)
        {
            var id_fichaParameter = id_ficha.HasValue ?
                new ObjectParameter("id_ficha", id_ficha) :
                new ObjectParameter("id_ficha", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Leer_Ubicacion_Generales_Result>("sp_Leer_Ubicacion_Generales", id_fichaParameter);
        }
    }
}
